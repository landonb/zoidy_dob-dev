---

# NOTE: To set up the virtual environment, we need to source the
# virtualenvwrapper script for each call -- and for the `source`
# command to work, we need to run Bash. E.g., you'll see this a lot:
#
#     args:
#       # Run Bash so `source` works.
#       executable: /bin/bash

# ***

- name: Dob dev » Stat project path
  stat: path="{{ zoidy_dob_dev_dob_working_tree }}"
  register: dob_path

- name: Dob dev » Verify project exists
  fail: msg="Please checkout dob first and update zoidy_dob_dev_dob_working_tree"
  when: not dob_path.stat.exists

# ***

- set_fact:
    # Lest: "ERROR: virtualenvwrapper could not find virtualenv in your path".
    VENV_PATH: "{{ zoidy_dob_dev_user_local_bin_dir }}:{{ ansible_env.PATH }}"

# ***

- name: Dob dev » Install Virtualenv and wrapper
  command: "pip3 install --user --upgrade {{ item }}"
  loop:
    - virtualenv
    - virtualenvwrapper

# ***

- name: Dob dev » Install github-release tool
  # Specify "-u"/update to always update projects previously got.
  command: "{{ zoidy_dob_dev_go }} get -u {{ item }}"
  environment:
    PATH: "{{ VENV_PATH }}"
    GOPATH: "{{ ansible_env.HOME }}/.gopath"
  loop:
    - github.com/aktau/github-release

# ***

- name: Dob dev » Remove existing virtual environment
  shell: >
    source {{ zoidy_dob_dev_virtualenvwrapper }} && \
    rmvirtualenv {{ zoidy_dob_dev_venv_name }}
  args:
    executable: /bin/bash
  environment:
    PATH: "{{ VENV_PATH }}"

# ***

- name: Dob dev » Create virtual environment
  shell: >
    source {{ zoidy_dob_dev_virtualenvwrapper }} && \
    mkvirtualenv \
      -a {{ zoidy_dob_dev_dob_working_tree }} \
      --python={{ zoidy_dob_dev_python_bin }} \
      {{ zoidy_dob_dev_venv_name }}
  args:
    chdir: "{{ zoidy_dob_dev_dob_working_tree }}"
    executable: /bin/bash
  environment:
    PATH: "{{ VENV_PATH }}"

# ***

# Setup dob project development via `make develop`, which will setup
# dob and related projects, i.e., so you don't have to `cd` to a dozen
# places and run `pip3 install -U -e .`.

# YOU: Ensure you've copied dob/requirements/ultra-editable.pip.example
#      to dob/requirements/ultra-editable.pip and setup paths to all the
#      related Python projects you also want to hack on.

# NOTE: We use `cd` in the shell command, rather than using the Ansible shell
#       module's `chdir`, because workon changes the working directory.

- name: Dob dev » Call make develop to pip-install editable projects
  shell: >
    source {{ zoidy_dob_dev_virtualenvwrapper }} && \
    workon {{ zoidy_dob_dev_venv_name }} && \
    cd {{ zoidy_dob_dev_dob_working_tree }} && \
    make develop
  args:
    executable: /bin/bash
  environment:
    PATH: "{{ VENV_PATH }}"

